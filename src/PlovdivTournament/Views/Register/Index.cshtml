@model PlovdivTournament.Web.Models.RegisterViewModel
@using PlovdivTournament.Web.Library.Helpers
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Site_Layout.cshtml";
}
<script type="text/javascript">
    $(function () {
        $('#TournamentDropDown').change(function () {
            var form = $("#RegisterForm");
            form.attr("action", "/Register/Index");
            form.submit();
        })
        $('#DisciplineDropDown').change(function () {
            var form = $("#RegisterForm");
            form.attr("action", "/Register/Index");
            form.submit();
        })
        $('#CategoryDropDown').change(function () {
            var form = $("#RegisterForm");
            form.attr("action", "/Register/Index");
            form.submit();
        })
        $('#AgeGroupDropDown').change(function () {
            var form = $("#RegisterForm");
            form.attr("action", "/Register/Index");
            form.submit();
        })
    });
</script>


<div class="RegisterWrap">
    @using (Html.BeginForm("Save", "Register", FormMethod.Post, new { id = "RegisterForm" }))
    {
        @Html.HiddenFor(x => x.SelectedClubMembers, new { id = "SelectedClubMemberHidden" })

        @Html.DropDownListFor(x => x.SelectedTournamentId, SelectListHelper.GetTournaments(Model.Tournaments), new { id = "TournamentDropDown" })

        if (Model.SelectedTournament != null)
        {
        @Html.DropDownListFor(x => x.SelectedDisciplineId, SelectListHelper.GetDisciplines(Model.SelectedTournament.Disciplines), new { id = "DisciplineDropDown" })
        }

        if (Model.SelectedDiscipline != null)
        {
        @Html.DropDownListFor(x => x.SelectedCategoryId, SelectListHelper.GetTournamentCategories(Model.SelectedDiscipline.Categories), new { id = "CategoryDropDown" })
        }

        if (Model.SelectedCategory != null)
        { 
        @Html.DropDownListFor(x => x.SelectedAgeGroupId, SelectListHelper.GetDisciplineAgeGroups(Model.SelectedTournament.AgeGroups), new { id = "AgeGroupDropDown" })
        }

        if (Model.SelectedAgeGroup != null)
        {
            @Html.EditorFor(x => x.DanceName)
            
            for (int i = 1; i <= Model.SelectedCategory.MaxNumberOfParticipants; i++)
            {
                @Html.DropDownList("SelectedClubMember", SelectListHelper.GetClubMembers(Model.CurrentClub.Members), new { @class = "MemberDropDownList" })
            }
        }
         
        <div class="clearfix"></div>
        <p><a class="RegButton" href="#" onclick="SetSelectedClubMembers(); get_form(this).submit(); return false">Save</a></p>
    }
</div>
<div class="RegisteredWrap">
    @if (Model.SelectedAgeGroup != null && Model.RegisteredMembers.Count > 0)
    {
        foreach (var member in Model.RegisteredMembers)
        {
        <div class="CategoryMember">
            <p>@member.Name</p>
            <br />
            @foreach (var participant in member.Participants)
            {
                <p>@string.Format("{0} {1} {2} {3}", participant.FirstName, participant.MiddleName, participant.LastName, participant.EGN)</p>
                <br />
            }
        </div>
        }
    }
</div>
<div class="clearfix"></div>